#!/usr/bin/env tmux

# -----------------------------------------------------------------------------
# Global options
# -----------------------------------------------------------------------------

# set the default TERM
if-shell 'infocmp $TERM' { set default-terminal "$TERM" } { set default-terminal tmux-256color }

# Enable RGB (truecolor)
set -a terminal-features '*:RGB'

# Enable colored underlines (e.g. in Vim)
set -a terminal-features '*:usstyle'

# set -ga terminal-overrides ",alacritty:RGB"
# set -ga terminal-overrides ",*256col*:Tc"

# Set the terminals
# set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# fix the cursor shape https://github.com/neovim/neovim/issues/5096#issuecomment-469027417
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# set default shell by OS (i use zsh)
# if-shell "uname | grep -q Darwin" "set -g default-shell /opt/homebrew/bin/fish"
# if-shell "uname | grep -q Linux" "set -g default-shell /home/linuxbrew/.linuxbrew/bin/fish"

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'

# Settings
set -g clock-mode-style 12
set -g focus-events on
set -g status-keys vi
set -g set-clipboard on # enable clipboard (OSC 52)
set -g history-limit 50000 # very large history
set -g display-time 4000 # display messages for 4 sec
set -g detach-on-destroy off
set -g bell-action any # Ring the bell if any background window rang a bell
set -g base-index 1 #start window numbering at 1
set -g renumber-windows on # re-number windows when one is closed
set -g set-titles on
set -g set-titles-string "#S"
# set -g set-titles-string "#T"
set -g extended-keys on # Use extended keys (CSI u)
# setw -g aggressive-resize on # not needed i use yabai

# session settings
set -gs escape-time 0

# window settings
setw -g clock-mode-style 12
setw -g mode-keys vi
setw -q -g utf8 on
setw -g pane-base-index 1 # start pane numbering at 1
setw -g automatic-rename off # this one is polling the status

# remove confirm step when killing a window or pane
bind & kill-window
bind x kill-pane

# Keyboard shortcut bindings (not needed i add them to term config)
# bind C-b last-window
# bind C-h resize-pane -L 5
# bind C-j resize-pane -D 5
# bind C-k resize-pane -U 5
# bind C-l resize-pane -R 5
# bind C-n next-window
# bind C-p previous-window
# bind g new-window -c "#{pane_current_path}" -n "lazygit" lazygit
# bind K new-window -c "#{pane_current_path}" -n "lazydocker" lazydocker
# bind j select-pane -D
# bind T display-popup -E "~/bin/tt"
# bind k select-pane -U
# bind v new-window -c "#{pane_current_path}" nvim +Files
# force a reload of the config file
bind R source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Window related bindings
# Open a new pane or window with the current directory of the current pane,
# not the directory in which the first tmux session was started.
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Move window and follow
bind h swap-window -t -1\; select-window -t -1
bind l swap-window -t +1\; select-window -t +1

# Smart pane switching with awareness of vim splits.
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?l?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-y if-shell "$is_vim" "send-keys C-l" "select-pane -R"

bind -n C-l send-keys 'C-l' # restore clear screen

# Mouse bindings
bind -n MouseUp2Status kill-window -t= # Middle click on the window label to kill it
bind -n DoubleClick1Status new-window # Double click on the window list to open a new window
set -g mouse on

# copy-mode-vi bindings
bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l
bind -T copy-mode-vi 'v' send-keys -X begin-selection

# Theme
# It is used inside nvim too !
set -g pane-active-border-style "fg=green,bg=default"
set -g pane-border-style "fg=brightblack,bg=default"

# set -g status-position top 
# set -g status-style 'bg=default,fg=white' # transparent status bar
set -g status-style bg=default
set -g status-left ''
set -g status-left-length 90
set -g status-right ''
set -g status-right-length 90
set -g status-interval 1 # more frequent updates
set -g status-justify absolute-centre

set -g window-status-current-format "#[fg=magenta]#[fg=black]#[bg=magenta]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=black]"
set -g window-status-format "#[fg=yellow]#[fg=black]#[bg=yellow]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=black]"

# Plugins configurations
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

# Plugins

# set -g @plugin 'carlocab/tmux-nvr'
# set -g @plugin 'tmux-plugins/tmux-urlview'
# set -g @plugin 'christoomey/vim-tmux-navigator' # i directly added bindings
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tpm'

# Plugins config
set -g @resurrect-processes 'vim nvim lvim'
set -g @resurrect-dir "${HOME}/.cache/tmux/resurrect"
set -g @resurrect-save 'S'
set -g @resurrect-restore '='

set -g @continuum-restore 'off'
set -g @resurrect-processes '~lvim -> nvim'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-processes "~nvim->`tmux display -p '#{pane_pid}' | xargs pgrep -a -P | cut -d ' ' -f2-`"

# set -g status-right 'Continuum status: #{continuum_status}'

# Automatically install tpm and plugins
# @see - https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Plugins Initialization (end of file)
run '~/.tmux/plugins/tpm/tpm'
