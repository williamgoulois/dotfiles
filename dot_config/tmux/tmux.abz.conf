# Ring the bell if any background window rang a bell
set -g bell-action any

# Undercurl
set -g default-terminal "${TERM}"
set-option -ga terminal-overrides ",xterm-256color:Tc" 
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"
setw -q -g utf8 on
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Smart pane switching with awareness of vim splits.
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?l?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"


# Mouse Support
set-option -g mouse on
set -g mouse on
#set-option -g base-index 1
#set-window-option -g pane-base-index 1
set-window-option -g mouse on
bind -n PageUp         if-shell -F "#{alternate_on}" "send-keys PageUp" "copy-mode -e; send-keys PageUp"
bind -n PageDown       if-shell "test #{pane_in_mode} -gt 0 -o #{alternate_on} -gt 0" "send-keys PageDown"
bind -n WheelUpPane    if-shell -F "#{alternate_on}" "send-keys -M" "select-pane -t= \; copy-mode -e \; send-keys -M"
bind -n WheelDownPane  if-shell -F "#{alternate_on}" "send-keys -M" "select-pane -t= \;                 send-keys -M"
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
# bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
# bind -n C-k send-keys -R \; clear-history

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
# styling
set -g status-bg "#1a1b26"
set -g status-fg "#a9b1d6"
set -g status-right ""
set -g status-left ""
set -g status-justify centre
set -g window-status-current-format "#[fg=magenta]#[fg=black]#[bg=magenta]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=black]"
set -g window-status-format "#[fg=yellow]#[fg=black]#[bg=yellow]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=black]"

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# .tmux.conf
set -g focus-events on
set -g status-style bg=default
# set -g status-left '#(cat #{socket_path}-\#{session_id}-vimbridge)'
set -g status-left-length 120
# set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge-R)'
set -g status-right-length 90
set -g status-justify absolute-centre

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'
#set -g @resurrect-capture-pane-contents 'on'
#set -g @continuum-boot 'on'
#set -g @continuum-boot-options 'fullscreen'
#set -g @continuum-restore 'on'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
# run-shell ~/.resurrect/resurrect.tmux
#run-shell ~/.continuum/continuum.tmux
#set -g default-command "reattach-to-user-namespace -l $SHELL"
#set-option -sa terminal-overrides ',xterm-256color:RGB' 

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

